{"version":3,"sources":["../../src/datasource.js"],"names":["SensuDatasource","instanceSettings","$q","backendSrv","templateSrv","uiSegmentSrv","type","url","name","basicAuth","withCredentials","q","options","isClientTags","isClientTagValue","aQuery","tagToValue","replaceWithText","undefined","test","split","startsWith","_this","datasourceRequest","data","method","headers","then","response","generateClientQueryTags","getClientQueryTagValue","mapToClientNameAndVersion","clientQueryTags","allTags","excludedTags","i","length","keys","Object","j","keyName","indexOf","tagValue","fullKeyName","push","sort","text","expandable","tag","tagSplit","tagToMatch","tagValueToMatch","allTagValues","z","result","map","d","x","e","console","log","dimensions","values","dimensionType","aDimension","value","getVariableName","templateVar","replace","slice","templateVars","apply","filters","aFilter","filterType","aFieldName","filterFieldName","aFieldValue","filterFieldValue","templatedValue","filterFieldValueReplaced","target","URIs","dimensionURI","clientNames","checkNames","aggregateNames","getClientNames","getCheckNames","getAggregateNames","replaceFilterValues","alias","aliasReplaced","sourceType","responses","buckets","refId","hasOwnProperty","aTarget","rawTarget","filterData","aRawTarget","allResults","getBuckets","bucketKeys","aKey","processConversions","setRawTargets","processFilters","client","checkName","dimension","mapToTextValue","filter","filterURI","queries","singleTarget","targets","forEach","interval","interval_to_ms","minimumInterval","secondsToHms","deferred","defer","resolve","promise","allQueries","all","first","multipleDataQueries","results","uriType","params","httpOptions","anError","status","Error","reject","error","message","parseQueryResult","pendingQueries","dataCalls","uriList","getQueryURIByType","singleDataQuery","multiDone","errors","updates","update","title"],"mappings":"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","file":"datasource.js","sourcesContent":["import angular from \"angular\";\nimport _ from \"lodash\";\nimport dateMath from \"app/core/utils/datemath\";\nimport kbn from \"app/core/utils/kbn\";\nimport {\n  convertClientsToJSON,\n  convertClientHistoryToDataPoints,\n  convertClientsToDataPoints,\n  convertClientSummaryMetricsToJSON,\n  getClientsURIs\n} from './client_functions';\nimport {\n  convertEventsToJSON,\n  convertEventsToDataPoints,\n  convertEventsToEventMetrics,\n  convertEventsToEventMetricsJSON,\n  getEventsURIs\n} from './event_functions';\nimport {\n  getAggregateURIs,\n  convertAggregatesToDataPoints,\n  convertAggregatesToJSON\n} from './aggregate_functions';\nimport {\n  getResultURIs,\n  convertResultsToTable,\n  convertResultsToDataPoints,\n  convertResultsToJSON\n} from './result_functions';\nimport {\n  getClientHistoryURIs\n} from './clienthistory_functions';\nimport {\n  getClientHealthURIs,\n  convertClientHealthToJSON,\n  convertClientHealthMetricsToJSON\n} from './client_health_functions';\n\nexport class SensuDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv, uiSegmentSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.uiSegmentSrv = uiSegmentSrv;\n    //this.clientQueryTags = [];\n  }\n\n  // Required for templating\n  // gets the clients from Sensu API\n  // https://sensuapp.org/docs/0.26/api/clients-api.html\n\n  /**\n   * [metricFindQuery description]\n   * @param  {[type]} options [description]\n   * @return {[type]}         [description]\n   */\n  metricFindQuery(options) {\n    //console.log(\"metricFindQuery entered: \" + options);\n    var isClientTags = false;\n    var isClientTagValue = false;\n    var aQuery = \"/clients\";\n    var tagToValue = \"\";\n    // substitute template vars\n    options = this.templateSrv.replaceWithText(options);\n    if ((options !== undefined) && (options !== \"\")) {\n      switch (true) {\n        case /clienttags/.test(options):\n          aQuery = '/clients';\n          isClientTags = true;\n          break;\n        case /clienttagvalue/.test(options):\n          aQuery = '/clients';\n          isClientTagValue = true;\n          // split out the tag from the query\n          tagToValue = options.split(\"tag=\")[1];\n          break;\n        default:\n          aQuery = options;\n      }\n      // make sure there is a leading slash\n      if (!aQuery.startsWith(\"/\")) {\n        aQuery = \"/\" + aQuery;\n      }\n    }\n    var _this = this;\n    return this.backendSrv.datasourceRequest({\n      url: this.url + aQuery,\n      data: options,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": this.basicAuth\n      }\n    }).then(function(response) {\n      //_this.clientQueryTags = _this.generateClientQueryTags(response);\n      if (isClientTags) {\n        return _this.generateClientQueryTags(response);\n      }\n      if (isClientTagValue) {\n        return _this.getClientQueryTagValue(response, tagToValue);\n      }\n      return _this.mapToClientNameAndVersion(response);\n    });\n  }\n\n  generateClientQueryTags(response) {\n    var clientQueryTags = [];\n    var allTags = [];\n    var excludedTags = [\n      'name',\n      'socket',\n      'address',\n      'subscriptions',\n      'timestamp',\n      'keepalive',\n      'keepalives',\n      'redact',\n      'version'\n    ];\n    for (let i = 0; i < response.data.length; i++) {\n      var keys = Object.keys(response.data[i]);\n      for (let j = 0; j < keys.length; j++) {\n        let keyName = keys[j];\n        if (excludedTags.indexOf(keyName) === -1) {\n          let tagValue = response.data[i][keyName];\n          let fullKeyName = keyName + \"=\" + tagValue;\n          if (allTags.indexOf(fullKeyName) < 0) {\n            allTags.push(fullKeyName);\n          }\n        }\n      }\n    }\n    if (allTags.length > 0) {\n      // build the tags\n      allTags.sort();\n      for (let i = 0; i < allTags.length; i++) {\n        clientQueryTags.push(\n          {\n            text: allTags[i],\n            expandable: true\n          }\n        );\n      }\n    }\n    return clientQueryTags;\n  }\n\n  getClientQueryTagValue(response, tag) {\n    var tagSplit = tag.split('=');\n    var tagToMatch = tagSplit[0];\n    var tagValueToMatch = tagSplit[1];\n    var clientQueryTags = [];\n    var allTagValues = [];\n    for (let i = 0; i < response.data.length; i++) {\n      var keys = Object.keys(response.data[i]);\n      for (let j = 0; j < keys.length; j++) {\n        let keyName = keys[j];\n        if (tagToMatch === keyName) {\n\n          // this can be a value or an array inside, check both\n          if (typeof response.data[i][tagToMatch] !== 'string') {\n            for (let z = 0; z < response.data[i][tagToMatch].length; z++) {\n              if (response.data[i][tagToMatch][z] === tagValueToMatch) {\n                //let tagValue = response.data[i][keyName];\n                let tagValue = response.data[i].name;\n                if (allTagValues.indexOf(tagValue) < 0) {\n                  allTagValues.push(tagValue);\n                }\n              }\n            }\n          } else {\n            if (response.data[i][tagToMatch] === tagValueToMatch) {\n              //let tagValue = response.data[i][keyName];\n              let tagValue = response.data[i].name;\n              if (allTagValues.indexOf(tagValue) < 0) {\n                allTagValues.push(tagValue);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (allTagValues.length > 0) {\n      // build the tags\n      for (let i = 0; i < allTagValues.length; i++) {\n        clientQueryTags.push(\n          {\n            text: allTagValues[i]\n          }\n        );\n      }\n    }\n    return clientQueryTags;\n  }\n\n  /**\n   * [mapToClientNameAndVersion description]\n   * @param  {[type]} result [description]\n   * @return {[type]}        [description]\n   */\n  mapToClientNameAndVersion(result) {\n    return _.map(result.data, function(d) {\n      var x = {\n        text: \"\",\n        expandable: true\n      };\n      try {\n        x = {\n          text: d.name,\n          expandable: true\n        };\n      } catch (e) { console.log(\"bad data\");}\n      return x;\n    });\n  }\n\n  /**\n   * [getClientNames description]\n   * @param  {[type]} dimensions [description]\n   * @return {[type]}            [description]\n   */\n  getClientNames(dimensions) {\n    var values = [];\n    for (var i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].dimensionType === 'clientName') {\n        var aDimension = dimensions[i].value;\n        if (this.templateSrv.getVariableName(aDimension)) {\n          // template variable found, expand it\n          var templateVar = this.templateSrv.replace(aDimension);\n          if (templateVar.length > 0) {\n            // the expanded variable comes back as { value1 , value2 }\n            // or it comes back as just a value\n            if (templateVar.startsWith('{')) {\n              templateVar = templateVar.slice(1, -1);\n              var templateVars = templateVar.split(',');\n              values.push.apply(values, templateVars);\n            } else {\n              values.push(templateVar);\n            }\n          }\n        } else {\n          values.push(aDimension);\n        }\n      }\n    }\n    //console.log(values);\n    return values;\n  }\n\n  /**\n   * [getCheckNames description]\n   * @param  {[type]} dimensions [description]\n   * @return {[type]}            [description]\n   */\n  getCheckNames(dimensions) {\n    var values = [];\n    for (var i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].dimensionType === 'checkName') {\n        var aDimension = dimensions[i].value;\n        if (this.templateSrv.getVariableName(aDimension)) {\n          // template variable found, expand it\n          var templateVar = this.templateSrv.replace(aDimension);\n          if (templateVar.length > 0) {\n            // the expanded variable comes back as { value1 , value2 }\n            // or it comes back as just a value\n            if (templateVar.startsWith('{')) {\n              templateVar = templateVar.slice(1, -1);\n              var templateVars = templateVar.split(',');\n              values.push.apply(values, templateVars);\n            } else {\n              values.push(templateVar);\n            }\n          }\n        } else {\n          values.push(aDimension);\n        }\n      }\n    }\n    return values;\n  }\n\n  /**\n   * [getAggregateNames description]\n   * @param  {[type]} dimensions [description]\n   * @return {[type]}            [description]\n   */\n  getAggregateNames(dimensions) {\n    var values = [];\n    for (var i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].dimensionType === 'aggregateName') {\n        var aDimension = dimensions[i].value;\n        if (this.templateSrv.getVariableName(aDimension)) {\n          // template variable found, expand it\n          var templateVar = this.templateSrv.replace(aDimension);\n          if (templateVar.length > 0) {\n            // the expanded variable comes back as { value1 , value2 }\n            // or it comes back as just a value\n            if (templateVar.startsWith('{')) {\n              templateVar = templateVar.slice(1, -1);\n              var templateVars = templateVar.split(',');\n              values.push.apply(values, templateVars);\n            } else {\n              values.push(templateVar);\n            }\n          }\n        } else {\n          values.push(aDimension);\n        }\n      }\n    }\n    return values;\n  }\n\n  replaceFilterValues(filters) {\n    for (var i = 0; i < filters.length; i++) {\n      var aFilter = filters[i];\n      switch (aFilter.filterType) {\n        case 'field':\n          /*jshint -W087 */\n          //debugger;\n          // Field filters have these properties\n          // filterFieldName\n          // filterFieldValue\n          var aFieldName = aFilter.filterFieldName;\n          var aFieldValue = aFilter.filterFieldValue;\n          var templatedValue = this.templateSrv.replace(aFieldValue);\n          aFilter.filterFieldValueReplaced = templatedValue;\n          break;\n      }\n    }\n    return filters;\n  }\n\n  /**\n   * [getQueryURIByType description]\n   * @param  {[type]} target [description]\n   * @return {[type]}        [Array of URIs]\n   */\n  getQueryURIByType(target) {\n    var URIs = [];\n    var dimensionURI = '/events';\n    var clientNames = null;\n    var checkNames = null;\n    var aggregateNames = null;\n    if (target.dimensions !== undefined) {\n      clientNames = this.getClientNames(target.dimensions);\n      checkNames = this.getCheckNames(target.dimensions);\n      aggregateNames = this.getAggregateNames(target.dimensions);\n    }\n    if (target.filters !== undefined) {\n      // convert all templated values\n      this.replaceFilterValues(target.filters);\n      /*jshint -W087 */\n      //debugger;\n    }\n    if (target.alias !== undefined) {\n      target.aliasReplaced = this.templateSrv.replace(target.alias);\n    }\n\n    switch (target.sourceType) {\n      case 'aggregates':\n      case 'aggregates_json':\n        // https://sensuapp.org/docs/0.28/api/aggregates-api.html\n        URIs = getAggregateURIs(target, aggregateNames);\n        break;\n      case 'check_subscriptions':\n        // https://sensuapp.org/docs/0.28/api/checks-api.html\n        //\n        // Returns list of subscription names, with the corresponding checks for the subscription\n        // Dimensions are:\n        //    name - name of check\n        //    aggregate - name of aggregate\n        //    type (metric|check)\n        //    source - JIT client\n        //\n        break;\n      case 'client_health_json':\n        URIs = getClientHealthURIs(clientNames);\n        break;\n      case 'clients':\n      case 'clients_json':\n        // https://sensuapp.org/docs/0.28/api/clients-api.html\n        URIs = getClientsURIs(checkNames, clientNames);\n        break;\n      case 'clienthistory':\n        // https://sensuapp.org/docs/0.28/api/clients-api.html\n        // look for clientName in dimensions\n        URIs = getClientHistoryURIs(clientNames);\n        break;\n      case 'event_metrics':\n      case 'event_metrics_json':\n      case 'events':\n      case 'events_json':\n        // https://sensuapp.org/docs/0.28/api/events-api.html\n        URIs = getEventsURIs(checkNames, clientNames);\n        break;\n      case 'results_json':\n      case 'results_table':\n        // https://sensuapp.org/docs/0.28/api/results-api.html\n        URIs = getResultURIs(checkNames, clientNames);\n        break;\n      case 'sensu_health_json':\n        // https://sensuapp.org/docs/0.28/api/health-and-info-api.html\n        break;\n      case 'silenced_entries_json':\n        // https://sensuapp.org/docs/0.28/api/silenced-api.html\n        break;\n      case 'stashes_json':\n        // https://sensuapp.org/docs/0.28/api/stashes-api.html\n        break;\n    }\n    return URIs;\n  }\n\n  getBuckets(responses) {\n    var buckets = {};\n    for (var i = 0; i < responses.data.length; i++) {\n      var refId = responses.data[i].target.refId;\n      if (buckets.hasOwnProperty(refId)) {\n        buckets[refId].push(responses.data[i]);\n      } else {\n        buckets[refId] = [responses.data[i]];\n      }\n    }\n    /*jshint -W087 */\n    //debugger;\n    return buckets;\n  }\n\n  processConversions(sourceType, aTarget, responses) {\n    var result = [];\n    switch (sourceType) {\n      case 'aggregates':\n        result = convertAggregatesToDataPoints(aTarget, responses);\n        break;\n      case 'aggregates_json':\n        result = convertAggregatesToJSON(aTarget, responses);\n        return result;\n      case 'clients':\n        result = convertClientsToDataPoints(aTarget, responses);\n        return result;\n      case 'clients_json':\n        result = convertClientsToJSON(aTarget, responses);\n        return result;\n      case 'client_health_json':\n        result = convertClientHealthToJSON(aTarget, responses);\n        return result;\n      case 'clienthistory':\n        result = convertClientHistoryToDataPoints(aTarget, responses);\n        break;\n      case 'events':\n        result = convertEventsToDataPoints(aTarget, responses);\n        break;\n      case 'events_json':\n        result = convertEventsToJSON(aTarget, responses);\n        break;\n      case 'event_metrics':\n        result = convertEventsToEventMetrics(aTarget, responses);\n        break;\n      case 'event_metrics_json':\n        result = convertEventsToEventMetricsJSON(aTarget, responses);\n        break;\n      case 'results_json':\n        result = convertResultsToJSON(aTarget, responses);\n        break;\n      case 'results_table':\n        result = convertResultsToTable(aTarget, responses);\n        break;\n      default:\n        console.log(\"Unknown source type\");\n        break;\n    }\n    return result;\n  }\n\n  setRawTargets(aTarget, result) {\n    // keep the actual name\n    for (let i = 0; i < result.data.length; i++) {\n      result.data[i].rawTarget = result.data[i].target;\n    }\n    return result;\n  }\n\n  processFilters(aTarget, result) {\n    // if there are no filters, return all data[] items\n    if ((aTarget.filters !== undefined) && (aTarget.filters.length > 0)) {\n      var filterData = [];\n      for (let i = 0; i < aTarget.filters.length; i++) {\n        var aFilter = aTarget.filters[i];\n        // iterate over the data, find matching targets\n        for (let j = 0; j < result.data.length; j++) {\n          var aRawTarget = result.data[j].rawTarget;\n          if (aFilter.filterType === aRawTarget) {\n            // Prepend Alias\n            if (aTarget.aliasReplaced) {\n              result.data[j].target = aTarget.aliasReplaced + \" \" + aRawTarget;\n            }\n            // save this result\n            filterData.push(result.data[j]);\n          }\n        }\n      }\n      // if we have filtered data, replace the result with it\n      if (filterData.length > 0) {\n        result.data = filterData;\n      }\n    } else {\n      // if there are no filters, apply the alias (this is probably not what you want, but allow it...)\n      if (aTarget.aliasReplaced) {\n        for (let i = 0; i < result.data.length; i++) {\n          result.data[i].target = aTarget.aliasReplaced;\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\n   * [parseQueryResult description]\n   * @param  {[type]} aTarget  [description]\n   * @param  {[type]} responses Array of Responses, containing data[{ target: aTarget, response: response}]\n   * @return {[type]}          [description]\n   */\n  parseQueryResult(responses) {\n\n    // This will match refId's for responses and bucket them together, then pass the bucket to the conversion routines\n    // This allows multiple responses intended for a single target to all be processed at once\n    // It is up to the processor to use the data sent, and return a result that can be used.\n    var allResults = { data: [] };\n    if (!responses || !responses.data) {\n      return allResults;\n    }\n    var buckets = this.getBuckets(responses);\n\n    // iterate over the keys in the buckets to get the target and source type\n    var bucketKeys = Object.keys(buckets);\n    for (let i = 0; i < bucketKeys.length; i++) {\n      let aKey = bucketKeys[i];\n      let sourceType = buckets[aKey][0].target.sourceType;\n      // also use the target from the first response\n      let aTarget = buckets[aKey][0].target;\n      // convert results according to the sourceType\n      // IMPORTANT: do not allow responses to be modifed, return a new object!\n      let result = this.processConversions(sourceType, aTarget, responses);\n      // update result with the rawTarget name (preserve name from aliasing)\n      result = this.setRawTargets(aTarget, result);\n      // apply filters\n      result = this.processFilters(aTarget, result);\n      // iterate over all of the results and push into allResults\n      for (let i = 0; i < result.data.length; i++) {\n        allResults.data.push(result.data[i]);\n      }\n    }\n    return allResults;\n  }\n\n  /**\n   *\n   */\n  getCheckInterval(client, checkName) {\n    // http://10.227.86.62/results/default-oel-67-x86-64/keepalive\n    /* The check may not have interval defined, which means it is defaulted to 60 seconds\n    {\n      \"client\": \"default-oel-67-x86-64\",\n      \"check\": {\n        \"thresholds\": {\n          \"warning\": 120,\n          \"critical\": 180\n        },\n        \"name\": \"keepalive\",\n        \"issued\": 1476277039,\n        \"executed\": 1476277039,\n        \"output\": \"No keepalive sent from client for 40860 seconds (>=180)\",\n        \"status\": 2,\n        \"type\": \"standard\"\n      }\n    }\n     */\n  }\n\n  /**\n   * [dimensionFindValues description]\n   * @param  {[type]} target    [description]\n   * @param  {[type]} dimension [description]\n   * @return {[type]}           [description]\n   */\n  dimensionFindValues(target, dimension) {\n    var dimensionURI = '/clients';\n\n    switch (dimension.dimensionType) {\n      case 'clientName':\n        dimensionURI = '/clients';\n        break;\n      case 'checkName':\n        dimensionURI = '/checks';\n        break;\n      case 'aggregateName':\n        dimensionURI = '/aggregates';\n        break;\n    }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + dimensionURI,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": this.basicAuth\n      }\n    }).then(this.mapToTextValue);\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      return {\n        text: d.name,\n        value: d.name\n      };\n    });\n  }\n\n  /**\n   * [dimensionFindValues description]\n   * @param  {[type]} target    [description]\n   * @param  {[type]} filter [description]\n   * @return {[type]}           [description]\n   */\n  filterFindValues(target, filter) {\n    var filterURI = '/clients';\n    switch (filter.filterType) {\n      case 'clientName':\n        filterURI = '/clients';\n        break;\n      case 'checkName':\n        filterURI = '/checks';\n        break;\n      case 'aggregateName':\n        filterURI = '/aggregates';\n        break;\n    }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + filterURI,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": this.basicAuth\n      }\n    }).then(this.mapToTextValue);\n  }\n\n  query(options) {\n    //console.log(\"query entered\");\n    var queries = [];\n    var _this = this;\n    var singleTarget = null;\n    options.targets.forEach(function(target) {\n      // TODO handle hide and no target specified\n      //if (target.hide || !target.target) {\n      //  continue;\n      //}\n      queries.push(target);\n    });\n    var interval = options.interval;\n    //console.log(\"options interval = \" + interval);\n    if (kbn.interval_to_ms(interval) < this.minimumInterval) {\n      // console.log(\"Detected interval smaller than allowed: \" + interval);\n      interval = kbn.secondsToHms(this.minimumInterval / 1000);\n      // console.log(\"New Interval: \" + interval);\n    }\n    //console.log(\"interval after min check = \" + interval);\n    var deferred = this.q.defer();\n\n    // if there are no queries, return empty data\n    if (queries.length === 0) {\n      // console.log(\"no tags visible or specified, no data to fetch\");\n      deferred.resolve({\n        data: []\n      });\n      return deferred.promise;\n    }\n    var allQueries = this.q.all({\n      first: _this.multipleDataQueries(queries),\n    });\n    allQueries.then(function(results) {\n      // return results from queries\n      deferred.resolve(results.first);\n    });\n    return deferred.promise;\n  }\n\n  singleDataQuery(singleTarget, uriType) {\n    //console.log(\"singleDataQuery entered\");\n    var _this = this;\n    var deferred = this.q.defer();\n    var params = {};\n    var httpOptions = {\n      method: 'GET',\n      url: this.url + uriType,\n      params: params,\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": this.basicAuth\n      }\n    };\n    this.backendSrv.datasourceRequest(httpOptions)\n      .then(function(response) {\n        var anError = null;\n        if (response.status !== 200) {\n          console.log(\"error...\");\n          anError = new Error(\"Bad Status: \" + response.status);\n          deferred.reject(anError);\n        }\n        if (!response.data) {\n          anError = new Error(\"No data\");\n          deferred.reject(anError);\n        }\n        // this used to parse per response, instead this is returning the target and response to be later\n        // used by multiDone\n        // OLD: deferred.resolve(_this.parseQueryResult(singleTarget, response));\n        deferred.resolve({ target: singleTarget, response: response});\n      }, function(response) {\n        console.error('Unable to load data. Response: %o', response.data ? response.data.message : response);\n        var error = new Error(\"Unable to load data\");\n        deferred.reject(error);\n      });\n\n    return deferred.promise;\n  }\n\n  /**\n   * Wrapper called when all queries have been completed.\n   * @param  {[type]} responses [description]\n   * @return {[type]}           [description]\n   */\n  multiDone(responses) {\n    /*jshint -W087 */\n    //debugger;\n    return this.parseQueryResult(responses);\n  }\n\n  /**\n   * Leverages promises to perform multiple async queries\n   * @param  {[type]} pendingQueries [description]\n   * @return {[type]}                [description]\n   */\n  multipleDataQueries(pendingQueries) {\n    var deferred = this.q.defer();\n    var dataCalls = [];\n    var _this = this;\n    // for each query, we get a list of sensu uris' to hit\n    // to retrieve the data\n    angular.forEach(pendingQueries, function(aTarget) {\n      var uriList = _this.getQueryURIByType(aTarget);\n      for (var i = 0; i < uriList.length; i++) {\n        dataCalls.push(_this.singleDataQuery(aTarget, uriList[i]));\n      }\n    });\n    this.q.all(dataCalls)\n      .then(\n        function(results) {\n          var response = {\n            data: []\n          };\n          // merge all of the results into one response\n          angular.forEach(results, function(result) {\n            response.data.push(result);\n            //angular.forEach(result.data, function(dataSet) {\n            //  response.data.push(dataSet);\n            //});\n          });\n          // multiDone needs to return all of the parsed results inside somevar.data[]\n          deferred.resolve(_this.multiDone(response));\n        },\n        function(errors) {\n          deferred.reject(errors);\n        },\n        function(updates) {\n          deferred.update(updates);\n        }\n      );\n    return deferred.promise;\n  }\n\n  // Required\n  // Used for testing datasource in datasource configuration pange\n  //    'Access-Control-Allow-Origin': \"http://localhost:3000\"\n  //\n\n  /**\n   * [testDatasource description]\n   * @return {[type]} [description]\n   */\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/info',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": this.basicAuth\n      },\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return {\n          status: \"success\",\n          message: \"Data source is working\",\n          title: \"Success\"\n        };\n      }\n    });\n  }\n}\n"]}