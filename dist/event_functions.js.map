{"version":3,"sources":["../src/event_functions.js"],"names":["getEventsURIs","checkNames","clientNames","URIs","dimensionURI","aClientName","aCheckName","anAggregateName","length","i","push","j","convertEventsToDataPoints","aTarget","responses","response","getResponseForTarget","data","undefined","singleData","filteredData","anEvent","datapoints","startingTimestamp","timestamp","check","history","last_execution","y","target","client","name","clientName","includeEventTarget","silenced","hideSilencedEvents","newResponse","convertEventsToJSON","issued","clientShortname","parts","split","client_short_name","statusText","status","status_text","check_name","occurrences","occurrences_watermark","action","id","last_state_change","last_ok","silenced_by","executed","err","type","convertEventsToEventMetricsJSON","eventMetrics","numEvents","numSilenced","numClientsSilenced","numChecksSilenced","numWarningEvents","numWarningEventsSilenced","numCriticalEvents","numCriticalEventsSilenced","numUnknownEvents","numUnknownEventsSilenced","indexOf","filters","aFilter","filterType","hasOwnProperty","filterFieldName","aVal","filterFieldValueReplaced","convertEventsToEventMetrics","targetName","aliasReplaced","eventMetricMode"],"mappings":"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","file":"event_functions.js","sourcesContent":["/**\n *\n */\nimport { getResponseForTarget } from './common';\n\n function getEventsURIs(checkNames, clientNames) {\n   // https://sensuapp.org/docs/0.28/api/events-api.html\n   var URIs = [];\n   var dimensionURI = '/events';\n   var aClientName = null;\n   var aCheckName = null;\n   var anAggregateName = null;\n   if (clientNames.length) {\n     for (let i = 0; i < clientNames.length; i++) {\n       aClientName = clientNames[i];\n       dimensionURI = '/events/' + aClientName;\n       URIs.push(dimensionURI);\n     }\n   }\n   if ((checkNames.length) && (clientNames.length)) {\n     for (let i = 0; i < clientNames.length; i++) {\n       aClientName = clientNames[i];\n       for (let j = 0; j < checkNames.length; j++) {\n         aCheckName = checkNames[i];\n         dimensionURI = '/events/' + aClientName + '/' + aCheckName;\n         URIs.push(dimensionURI);\n       }\n     }\n   }\n   if (URIs.length === 0) {\n     URIs.push(dimensionURI);\n   }\n   return URIs;\n }\n\n\n/**\n * [convertEventsToDataPoints description]\n * @param  {[type]} response [description]\n * @return {[type]}        [description]\n */\nfunction convertEventsToDataPoints(aTarget, responses) {\n  var response = getResponseForTarget(aTarget, responses);\n\n  // convert history to datapoints\n\n  // the result has no \"datapoints\", need to create it based on the check data\n\n  // when we have a checkname and an clientName, the response is different, the\n  // data is not an array, but contains the same information, recreate and push\n  if (response.data.length === undefined) {\n    var singleData = response.data;\n    response.data = [];\n    response.data.push(singleData);\n  }\n  var filteredData = [];\n  for (var i = 0; i < response.data.length; i++) {\n    var anEvent = response.data[i];\n    var datapoints = [];\n    var startingTimestamp = 0;\n    // an event with client param has a timestamp at the toplevel\n    if (anEvent.timestamp !== undefined) {\n      startingTimestamp = anEvent.timestamp - (60 * anEvent.check.history.length);\n    }\n    if (anEvent.last_execution !== undefined) {\n      startingTimestamp = anEvent.last_execution - (60 * anEvent.history.length);\n    }\n    // time needs to be in MS, we get EPOCH from Sensu\n    for (var y = 0; y < anEvent.check.history.length; y++) {\n      datapoints[y] = [anEvent.check.history[y], (startingTimestamp + (60 * y)) * 1000];\n    }\n    anEvent.datapoints = datapoints;\n    // set the target to be the check name\n    anEvent.target = anEvent.client.name;\n    /*\n    if (anEvent.check.name !== undefined) {\n      anEvent.target = anEvent.check.name;\n    } else {\n      anEvent.target = anEvent.check;\n    }\n    */\n    //debugger;\n    anEvent.clientName = anEvent.client.name;\n    if (includeEventTarget(aTarget, anEvent)) {\n      if (!anEvent.silenced) {\n        filteredData.push(anEvent);\n      }\n      if (anEvent.silenced && !aTarget.hideSilencedEvents) {\n        filteredData.push(anEvent);\n      }\n    }\n  }\n  var newResponse = { data: filteredData };\n\n  return newResponse;\n}\n\n\nfunction convertEventsToJSON(aTarget, responses) {\n  /*jshint -W087 */\n  //debugger;\n  var response = getResponseForTarget(aTarget, responses);\n  // do not allow modification of response\n  //var newResponse = {};\n\n  var filteredData = [];\n  for (var i = 0; i < response.data.length; i++) {\n    var anEvent = response.data[i];\n    var datapoints = [];\n    //console.log(JSON.stringify(anEvent));\n    if ((anEvent.check.issued !== undefined) && includeEventTarget(aTarget, anEvent)) {\n      var clientShortname = anEvent.client.name;\n      // try to split on dot notation, take the first item\n      var parts = anEvent.client.name.split(\".\");\n      if (parts.length > 0) {\n        clientShortname = parts[0];\n      }\n      anEvent.client.client_short_name = clientShortname;\n      // now create text-based version of status\n      var statusText = \"UNKNOWN\";\n      if ((anEvent.check !== undefined) && (anEvent.check.status !== undefined)) {\n        switch (anEvent.check.status) {\n          case 0:\n            statusText = \"OK\";\n            break;\n          case 1:\n            statusText = \"WARNING\";\n            break;\n          case 2:\n            statusText = \"CRITICAL\";\n            break;\n          case 3:\n            statusText = \"UNKNOWN\";\n            break;\n          default:\n            statusText = \"UNKNOWN\";\n            break;\n        }\n      }\n      anEvent.check.status_text = statusText;\n      var data = {\n        timestamp: (anEvent.check.issued * 1000),\n        check_name: anEvent.check.name,\n        client: anEvent.client,\n        check: anEvent.check,\n        occurrences: anEvent.occurrences,\n        occurrences_watermark: anEvent.occurrences_watermark,\n        action: anEvent.action,\n        id: anEvent.id,\n        last_state_change: (anEvent.last_state_change * 1000),\n        last_ok: (anEvent.last_ok * 1000),\n        silenced: anEvent.silenced,\n        silenced_by: anEvent.silenced_by\n      };\n      try {\n        data.check.issued = data.check.issued * 1000;\n        data.check.executed = data.check.executed * 1000;\n      } catch (err) {\n        // do nothing\n      }\n      datapoints.push(data);\n      anEvent.datapoints = datapoints;\n      delete anEvent.check;\n      delete anEvent.client;\n      anEvent.type = 'docs';\n      if (!anEvent.silenced) {\n        filteredData.push(anEvent);\n      }\n      if (anEvent.silenced && !aTarget.hideSilencedEvents) {\n        filteredData.push(anEvent);\n      }\n    }\n  }\n  var newResponse = { data: filteredData };\n\n  //var str = JSON.stringify(newResponse, null, 2);\n  //console.log(str);\n  /*jshint -W087 */\n  //debugger;\n  return newResponse;\n}\n\n/**\n * The takes /events output from Sensu and returns the following:\n * Count of WARNING, and Number Silenced\n * Count of CRITICAL, and number silenced\n * Count of UNKNOWN, and number silenced\n * Count of all Events\n * Count of all Events not Silenced\n * Count of all Silenced Events\n * Count of Clients Silenced\n * Count of Checks Silenced\n *\n * Filters are also applied\n *\n * @param  {[type]} target   [description]\n * @param  {[type]} response [description]\n * @return {[type]}          [description]\n */\nfunction convertEventsToEventMetricsJSON(aTarget, responses) {\n  var response = getResponseForTarget(aTarget, responses);\n\n  // timestamp is taken from first item in response\n  var timestamp = 0;\n  try {\n    timestamp = response.data[0].check.issued * 1000;\n  } catch (err) {\n    // do nothing\n  }\n  var eventMetrics = {\n    target: \"allEvents\",\n    timestamp: timestamp,\n    numEvents: 0,\n    numSilenced: 0,\n    numClientsSilenced: 0,\n    numChecksSilenced: 0,\n    numWarningEvents: 0,\n    numWarningEventsSilenced: 0,\n    numCriticalEvents: 0,\n    numCriticalEventsSilenced: 0,\n    numUnknownEvents: 0,\n    numUnknownEventsSilenced: 0\n  };\n  var clientNames = [];\n  var checkNames = [];\n  for (var i = 0; i < response.data.length; i++) {\n    var anEvent = response.data[i];\n    if (anEvent.check.issued !== undefined) {\n      if ((anEvent.check !== undefined) && (anEvent.check.status !== undefined) && includeEventTarget(aTarget, anEvent)) {\n        eventMetrics.numEvents += 1;\n        switch (anEvent.check.status) {\n          case 1:\n            eventMetrics.numWarningEvents += 1;\n            if (anEvent.silenced) {\n              eventMetrics.numWarningEventsSilenced += 1;\n              eventMetrics.numSilenced += 1;\n            }\n            break;\n          case 2:\n            eventMetrics.numCriticalEvents += 1;\n            if (anEvent.silenced) {\n              eventMetrics.numCriticalEventsSilenced += 1;\n              eventMetrics.numSilenced += 1;\n            }\n            break;\n          default:\n            eventMetrics.numUnknownEvents += 1;\n            if (anEvent.silenced) {\n              eventMetrics.numUnknownEventsSilenced += 1;\n              eventMetrics.numSilenced += 1;\n            }\n            break;\n        }\n      }\n      // store the client names to count later\n      if (clientNames.indexOf(anEvent.client.name) < 0) {\n        clientNames.push(anEvent.client.name);\n      }\n      // store the check names to count later\n      if (checkNames.indexOf(anEvent.check.name) < 0) {\n        checkNames.push(anEvent.check.name);\n      }\n      // inspect silenced_by for clientname:*, wich means the client is silenced\n      for (let i = 0; i < anEvent.silenced_by.length; i++) {\n        if (anEvent.silenced_by[i].indexOf('*')) {\n          eventMetrics.numClientsSilenced += 1;\n        }\n        else {\n          eventMetrics.numChecksSilenced += 1;\n        }\n      }\n    }\n  }\n  eventMetrics.numClientsSilenced = clientNames.length;\n  eventMetrics.numChecksSilenced = checkNames.length;\n  response.data = [{\n    target: \"allEvents\",\n    timestamp: timestamp,\n    type: 'docs',\n    datapoints: [eventMetrics]\n  }];\n  //var str = JSON.stringify(response, null, 2);\n  //console.log(str);\n  /*jshint -W087 */\n  //debugger;\n  //var x = response.data[0].datapoints[0][1];\n  //console.log(\"X = \" + x);\n  return response;\n}\n\n/**\n * No fields means it is a match\n * @param  {[type]}  target [description]\n * @return {Boolean}        [description]\n */\nfunction includeEventTarget(target, anEvent) {\n  /*jshint -W087 */\n  //debugger;\n  if (target.filters === undefined) {\n    return true;\n  }\n  if (target.filters.length === 0) {\n    return true;\n  }\n  for (var i = 0; i < target.filters.length; i++) {\n    var aFilter = target.filters[i];\n    switch (aFilter.filterType) {\n      case 'field':\n        // filterFieldName\n        // filterFieldValue\n        if (anEvent.client.hasOwnProperty(aFilter.filterFieldName)) {\n          // matched field, check value\n          var aVal = anEvent.client[aFilter.filterFieldName];\n          if (aVal === aFilter.filterFieldValueReplaced) {\n            return true;\n          }\n        }\n        break;\n    }\n  }\n  return false;\n}\n\n/**\n * [convertEventsToEventMetrics description]\n * @param  {[type]} aTarget   [description]\n * @param  {[type]} responses [description]\n * @return {[type]}           [description]\n */\nfunction convertEventsToEventMetrics(aTarget, responses) {\n  // find a response that matches the target\n  /*jshint -W087 */\n  //debugger;\n  var response = getResponseForTarget(aTarget, responses);\n  var newResponse = {};\n  // timestamp is taken from first item in response\n  var timestamp = 0;\n  try {\n    timestamp = response.data[0].check.issued * 1000;\n  } catch (err) {\n    // do nothing\n  }\n  var eventMetrics = {\n    target: \"allEvents\",\n    timestamp: timestamp,\n    numEvents: 0.0,\n    numSilenced: 0.0,\n    numClientsSilenced: 0.0,\n    numChecksSilenced: 0.0,\n    numWarningEvents: 0.0,\n    numWarningEventsSilenced: 0.0,\n    numCriticalEvents: 0.0,\n    numCriticalEventsSilenced: 0.0,\n    numUnknownEvents: 0.0,\n    numUnknownEventsSilenced: 0.0\n  };\n  var clientNames = [];\n  var checkNames = [];\n  for (var i = 0; i < response.data.length; i++) {\n    var anEvent = response.data[i];\n    if (anEvent.check.issued !== undefined) {\n      if ((anEvent.check !== undefined) && (anEvent.check.status !== undefined) && includeEventTarget(aTarget, anEvent)) {\n        eventMetrics.numEvents += 1.0;\n        switch (anEvent.check.status) {\n          case 1:\n            eventMetrics.numWarningEvents += 1.0;\n            if (anEvent.silenced) {\n              eventMetrics.numWarningEventsSilenced += 1.0;\n              eventMetrics.numSilenced += 1.0;\n            }\n            break;\n          case 2:\n            eventMetrics.numCriticalEvents += 1.0;\n            if (anEvent.silenced) {\n              eventMetrics.numCriticalEventsSilenced += 1.0;\n              eventMetrics.numSilenced += 1.0;\n            }\n            break;\n          default:\n            eventMetrics.numUnknownEvents += 1.0;\n            if (anEvent.silenced) {\n              eventMetrics.numUnknownEventsSilenced += 1.0;\n              eventMetrics.numSilenced += 1.0;\n            }\n            break;\n        }\n      }\n      // store the client names to count later\n      if (clientNames.indexOf(anEvent.client.name) < 1.0) {\n        clientNames.push(anEvent.client.name);\n      }\n      // store the check names to count later\n      if (checkNames.indexOf(anEvent.check.name) < 1.0) {\n        checkNames.push(anEvent.check.name);\n      }\n      // inspect silenced_by for clientname:*, wich means the client is silenced\n      for (let i = 0; i < anEvent.silenced_by.length; i++) {\n        if (anEvent.silenced_by[i].indexOf('*')) {\n          eventMetrics.numClientsSilenced += 1.0;\n        }\n        else {\n          eventMetrics.numChecksSilenced += 1.0;\n        }\n      }\n    }\n  }\n  eventMetrics.numClientsSilenced = clientNames.length;\n  eventMetrics.numChecksSilenced = checkNames.length;\n\n  /*jshint -W087 */\n  //debugger;\n  var targetName = null;\n  if (aTarget.name !== undefined) {\n    targetName = aTarget.name;\n  }\n  if (aTarget.aliasReplaced !== undefined) {\n    targetName = aTarget.aliasReplaced;\n  }\n  newResponse.data = [{\n    target: targetName,\n    datapoints: [\n      [ 0.00, timestamp ]\n    ]\n  }];\n  switch (aTarget.eventMetricMode) {\n    case 'all_events_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"all_events_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numEvents, timestamp]];\n      break;\n    case 'active_events_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"active_events_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numEvents - eventMetrics.numSilenced, timestamp]];\n      break;\n    case 'critical_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"critical_events_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numCriticalEvents, timestamp]];\n      break;\n    case 'critical_active_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"critical_active_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numCriticalEvents - eventMetrics.numCriticalEventsSilenced, timestamp]];\n      break;\n    case 'critical_silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"critical_silenced_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numCriticalEventsSilenced, timestamp]];\n      break;\n    case 'warning_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"warning_events_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numWarningEvents, timestamp]];\n      break;\n    case 'warning_active_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"warning_active_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numWarningEvents - eventMetrics.numWarningEventsSilenced, timestamp]];\n      break;\n    case 'warning_silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"warning_silenced_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numWarningEventsSilenced, timestamp]];\n      break;\n    case 'unknown_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"unknown_events_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numUnknownEvents, timestamp]];\n      break;\n    case 'unknown_active_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"unknown_active_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numUnknownEvents - eventMetrics.numUnknownEventsSilenced, timestamp]];\n      break;\n    case 'unknown_silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"unknown_silenced_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numUnknownEventsSilenced, timestamp]];\n      break;\n    case 'silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"silenced_events_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numSilenced, timestamp]];\n      break;\n    case 'clients_silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"clients_silenced_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numClientsSilenced, timestamp]];\n      break;\n    case 'checks_silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = \"checks_silenced_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numChecksSilenced, timestamp]];\n      break;\n    default:\n      if (targetName === null) {\n        newResponse.data[0].target = \"all_events_count\";\n      }\n      newResponse.data[0].datapoints = [[ eventMetrics.numEvents, timestamp]];\n      break;\n  }\n  //var str = JSON.stringify(newResponse, null, 2);\n  //console.log(str);\n  return newResponse;\n}\n\nexport {\n  convertEventsToJSON,\n  convertEventsToDataPoints,\n  convertEventsToEventMetrics,\n  convertEventsToEventMetricsJSON,\n  getEventsURIs,\n  includeEventTarget\n};\n"]}